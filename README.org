#+TITLE: Prairie Hill Learning Center Website
#+AUTHOR: AnderSon
#+EMAIL: son@lincolnix.net
#+OPTIONS: toc:nil num:nil

* Prairie Hill Learning Center 
  
  Rails application for [[http://www.prairiehill.com][prairiehill.com]]

** Issues :noexport:

*** Mon May 16 13:11:00 CDT 2016 

    Thanks to [[https://www.linkedin.com/in/eddie-hanline-iii-online-marketing-expert-8442b560?authType=name&authToken=dLO8&trk=wonton-desktop][Eddie Hanline]] for catching some cross-browser issues, I've found
    at least a couple [[https://app.crossbrowsertesting.com/public/ie2f337ea3f7cff3/screenshots/z7db3f51ed0d97ff4bb7][issues]] to deal with...

    Eddie said he is using Chrome for Mac, but my tests don't show any issues:
    https://app.crossbrowsertesting.com/public/ie2f337ea3f7cff3/screenshots/ze11b3217f05bf0e0e0c
    
    Not sure what to do here. I have been meaning to redesign and perhaps this 
    would be a good side project to go along with the Viking projects...

**** Major

     - [ ] Windows Vista, E8, 1024x768

       https://app.crossbrowsertesting.com/public/ie2f337ea3f7cff3/screenshots/z7db3f51ed0d97ff4bb7/z52c57f2d8f84d850c8d

     - [ ] Windows 7, E9, 1024x768

       https://app.crossbrowsertesting.com/public/ie2f337ea3f7cff3/screenshots/z7db3f51ed0d97ff4bb7/z261693dfe02a6760e42

       


** TODO 
   
   - [-] Sat Feb 13 18:47:52 CST 2016
     
     - [X] hide camp page
     - [ ] update camp page
       
       https://docs.google.com/forms/d/1JBaU-LJ1JWzM0gm2X38Bra1qCFcgUpiLmATPu9CbkTI/viewform

       [[./config/routes.rb]]
       
       [[./app/views/pages/home.html.erb]]
       
       [[./app/views/pages/summer_camp.html.erb]]
       
       ,----2016
       | NatureWorks Summer Camps 2016                                      |
       | NatureWorks Summer Day Camps and Mini-camps 2016                   |
       |                                                                    |
       | PRAIRIE HILL offers nature-centered day camp programs for children |
       | (ages 6-9, 10-13, 14-15 and mini-camps for ages 3-6) on our        |
       | historic farm, just seven miles south of Lincoln, Nebraska.        |
       |                                                                    |
       | More Info Button (to full camp page)                               |
       |                                                                    |
       `----
   
       ,----2015
       |                                                                          |
       | NatureWorks Summer Day Camps and Mini-camps                              |
       |                                                                          |
       | PRAIRIE HILL offers nature-centered day camp programs for children       |
       | (ages 6-9, 10-12,limited dates 12-15 and mini-camps for ages 3-6) on our |
       | historic farm, just seven miles south of Lincoln, Nebraska.              |
       |                                                                          |
       | Summer Camps are full for this year. Please plan to join us for our      |
       | Children's Country Fair and "Little Run on the Prairie" children's fun   |
       | run on Saturday, October 3rd. Run starts at 10:30am and Fair from 11-3.  |
       | Check back for updates and details!                                      |
       |                                                                          |
       `----
   
   #+name: current snippet 'summer-camp'
   #+begin_src web
         <h1 class="tour-dates" style="font-size: 4vw;"><strong>NatureWorks Summer Day Camps and Mini-camps </strong></h1>
         <p class="content-box">
           PRAIRIE HILL offers nature-centered day camp programs for children (ages 6-9, 10-12,limited dates 12-15 and mini-camps for ages 3-6) on our historic farm, just seven miles south of Lincoln, Nebraska.
         </p>
         <p class="content-box">
           <em>Summer Camps are full for this year</em>. Please plan to join us for our <strong>Children's Country Fair and "Little Run on the Prairie" children's fun run on Saturday, October 3rd. Run starts at 10:30am and Fair from 11-3</strong>. Check back for updates and details!<br>
         </p>
         <hr>
         <p class="hi-li">
           <a class="hidden camp-link" href="https://docs.google.com/forms/d/1bXdH8JeozdZy8447xA8P-PVWVGh2cUJDsT36JYtSIu8/viewform?c=0&amp;w=1">NatureWorks - Registration Form </a>
         </p>
         <h2 class="camp-title">Survival and Awareness -- with BJ Spring</h2>
         <h3 class="camp-title">June 1-12</h3>
         <p class="camp-subtitle">
           One of PRAIRIE HILL's favorite camps (offered for a rare two-week session), campers will develop their skills in nature through fox-walking, building primitive shelters, awareness and sensory exercises, basket/rope making, and much more...
         </p>
         <h2 class="camp-title">What's the Story?</h2>
         <h3 class="camp-title">June 15 - 26<br>
         </h3>
         <p class="camp-subtitle">
           This two-week camp will be lead by storytellers and writers from various walks of life. Storytelling is a way to learn about culture, life &amp; death, growth, adventure, and moral dilemmas across space and time. Campers will hear engaging stories that weave together mythology, history, fiction and non-fiction. They will also have opportunities to write their own legends.
         </p>
         <h2 class="camp-title">Suzuki Violin Camp</h2>
         <h3 class="camp-title">July 6-10</h3>
         <p class="camp-subtitle">
           Suzuki violin players from ages 3-15 are welcome to come play in the prairie with us! Small group lessons will take place throughout the day from experienced violin instructors and tutors. Pony riding, gardening, and exploring on the farm are also a part of the experience. Half-day or full-day options are available for this session.
         </p>
         <h2 class="camp-title">Simple Machines and Complex Creations</h2>
         <h3 class="camp-title">July 13-24</h3>
         <p class="camp-subtitle">
           "Never give more to the mind than to the hand." is a quote that Maria Montessori used when writing about children. This session will give plenty of opportunities for the mind and the hand to work together to create and understand simple machines like the pulley, inclined plane, wheel-and-axel and more. There will also be opportunities to engage in creating unique art forms using these concepts and others. 
           <br>
         </p>
         <h2 class="camp-title">Animal Encounters</h2>
         <h3 class="camp-title">July 27-31</h3>
         <p class="camp-subtitle">
           This one-week science camp will be led by UNL professor, Eileen Hebets, who has headed up the Eight-legged Encounters event at Morrill Hall for the past several years. Children will observe and interact with a variety of animals during this camp, and will experience the scientific methods of questioning, observing, hypothesis, drawing conclusions, etc.
         </p>
         <h2 class="camp-title">Mini-camps for children ages 3-6</h2>
         <p class="camp-subtitle">
           Each two-week session consists of six wonder-filled days (Tuesday-Thursday, Tuesday-Thursday). Your child will enjoy a rich, natural PRAIRIE HILL experience through gardening, leisurely walks in the pasture, egg-gathering, pony rides, building shelters in the woods, singing, stories, and much more. A lunch from home will taste delicious in the shade of our picnic area!
         </p>
         <p class="hi-li camp-link">
           <span style="color: #000000;" rel="color: #000000;"> <strong> <a href="https://docs.google.com/forms/d/1JgJvfvQlzrz_14qwm32E80YxnDHjg2hNF2e_NPf6fkA/viewform?c=0&amp;w=1" class="hidden">Mini-Camp PRAIRIE HILL - Registration Form </a> </strong> </span>
         </p>
         <h3 style="text-align: left;"><strong><u data-redactor-tag="u">Camp PRAIRIE HILL Daily Schedule</u> *</strong></h3>
         <div class="table">
           <table>
             <thead>
               <tr>
                 <th>
                 </th>
                 <th>
                 </th>
               </tr>
             </thead>
             <tbody>
               <tr>
                 <td>
                   <strong>9:00 a.m.</strong>
                 </td>
                 <td>
                   Drop-off: greeting and getting ready for the day
                 </td>
               </tr>
               <tr>
                 <td>
                   <strong> 9:15 a.m.</strong>
                 </td>
                 <td>
                   Circle Time: flag raising, songs, movement games
                 </td>
               </tr>
               <tr>
                 <td>
                   <strong> 9:30 a.m.</strong>
                 </td>
                 <td>
                   Garden Time/Nature Walk
                 </td>
               </tr>
               <tr>
                 <td>
                   <strong> 10:15 a.m.</strong>
                 </td>
                 <td>
                   Pony Rides
                 </td>
               </tr>
               <tr>
                 <td>
                   <strong> 11:15 a.m.</strong>
                 </td>
                 <td>
                   Lunch Preparation/Story Time
                 </td>
               </tr>
               <tr>
                 <td>
                   <strong> 11:30 a.m.</strong>
                 </td>
                 <td>
                   Picnic Lunch
                 </td>
               </tr>
               <tr>
                 <td>
                   <strong> 12:15 p.m.</strong>
                 </td>
                 <td>
                   Prepare for Pickup (12:30 p.m.)
                 </td>
               </tr>
             </tbody>
           </table>
           <hr>
           <address><strong><em data-redactor-tag="em">*Schedule may vary depending on more time devoted to . . . watching a caterpillar crawl across a leaf . . . feeling the morning breeze in the meadow . . . picking juicy cherries in the orchard . . . enjoying a longer ride on Dolly, the Shetland . . . or, well . . . you get the idea.</em></strong></address><address> </address><address>All camps at PRAIRIE HILL include daily pony riding, gardening, singing, walks in the pasture, animal care, story-telling, snacks, picnics, and more. Call 402-438-6668 for more information.</address><address> </address><address>Please join us for a family picnic on Friday evening on June 5th, 19th and July 17th.</address>
         </div>
       #+end_src
   
       : <div class='col-md-11'>
       :   <%#= cms_snippet_content('summer-camp', @cms_site).html_safe %>
       : </div>
   
   #+name: summer_camp.html.erb
   #+begin_src web
     <div class="small-12 small-centered columns card" style='overflow:hidden;'>

       <div class='row'>
         <div class='small-11 small-centered columns'>
           Summer Camp 2016 Coming Soon!
         </div>
         
         <div class='col-md-11'>
           <%#= cms_snippet_content('summer-camp', @cms_site).html_safe %>
         </div>

       </div>
     </div>
   #+end_src

       - [ ] design
	 - [ ] color ideas

	   https://ssl.gstatic.com/docs/forms/themes/images/v1/1a1c336297ccc987c4f65a5979d2e3f9dcb0a2bfcaeed37121f2c460367a434c/24_farm.jpg
	 
	   b3ad35, ea8329, 6f672b, f9dabf, fedd3a, 963225
	 - [ ] make registration link to button

       - [ ] create tabs and front page news

	 [[./app/views/pages/home.html.erb]]

	 [[./app/views/pages/_camp_brief.html.erb]]

	 [[./app/assets/stylesheets/bootstrap_and_customization.css.scss]]

	 - [ ] ready for links to google forms etc
	 
       - [ ] Sun Oct 11 11:53:19 CDT 2015
     
	 - [ ] gather user feedback
	   - [ ] survey
	     - [ ] delivery methods
	       - [ ] email
	       - [ ] rails engine
		 - [ ] https://github.com/runtimerevolution/survey
	     - [ ] elements
	   
	       - [ ] 5 tips for writing a great survey
	     
		 http://help.surveymonkey.com/articles/en_US/kb/5-Tips-for-Writing-a-Great-Survey
	     
		 Be Thankful!
	     
		 - [ ] Define Your Objectives. 
	       
		   Figure out the decision or decisions you're trying to make to 
		   focus your survey.   
	       
		   - [ ] Objectives
		 
		     - collect user feedback in order to understand
		   
		       - what worked? what didn't work?
		       - how did the site feel?
		       - browser and system type?
		     
		     - improve the application based on this feedback
		   
		 - [ ] Work Backwards. 
	       
		   Once you've set your objectives, determine the data you need to 
		   gather in your survey to make your decision.
	       
		   - [ ] data needed
		 
		     - comments, textual feedback
		   
		       What's good, what could be better, and how?
		   
		       - general
			 - look & feel
			 - functionality
			   - what worked?
			   - what did not work?
			 
		 - [ ] Check for Bias. 
	       
		   Make sure you're not asking leading questions. 
	       
		 - [ ] Do a Test Drive. 
	       
		   Send your survey to friends and colleagues for a test run. 
		   They'll help make sure your questions and response options are 
		   understandable and all your survey logic works.
	       
		 - [ ] Collect Results and Analyze Data. 
	       
		   This is where it gets really fun. The data rolling in from your 
		   survey should help you decide what product to launch next, how 
		   to raise more money at your next fundraiser, what to do to keep 
		   customers coming back, what to serve at your next party and much 
		   more.
	 - [ ] create special [[Events][event]] section
	   - [ ] section for LUX art event
	     - Event MVC
	       [[./app/models/event.rb]]
	       [[./app/helpers/events_helper.rb]]
	       [[./app/helpers/application_helper.rb]]
	       [[./app/views/events]]
	       [[./app/views/layouts/]]
	       [[./app/controllers/events_controller.rb]]
	   
	       - add condition to account for past events
		 - display past events for information purposes
		   - past events view
	   - [ ] details in email from Mandie
	 
	     [[Chris Rudasill benefit]]
	     [[file:docs/ArtAuctionbyChrisRudasilltobenifittPrairieHill.docx.txt][original document]]
	 
	     /Art Auction to Benefit PRAIRIE HILL/
	 
	     Local artist and PRAIRIE HILL dad Chris Rudasill is donating 
	     several pieces of his original artwork to be sold in a silent 
	     auction. 100% of the profits will go directly to the further 
	     funding of art materials and enrichment opportunities at PRAIRIE  
	     HILL. 
	 
	     Don’t miss this great opportunity to see and purchase original artwork 
	     at accessible prices (some starting bids will be as low as $10) while 
	     supporting education through year-round and summer camp programming at 
	     PRAIRIE HILL Learning Center.
	 
	     - Silent auction during First Friday 
	       - 11/6/15 (November 6)
		 - 5–8 p.m. 
	     - Lux Center for the Arts 
	       - 2601 N 48th St, Lincoln, NE 68504
	     
	     For more information and images of Chris’s artwork, visit: 
	     [[http://chrisrudasill.weebly.com][chrisrudasill.weebly.com]]   
	 
	     For more info about PRAIRIE HILL, visit:   
	     [[http://prairiehill.com][prairiehill.com]]
	 
	     [[./app/assets/images/rudasill_1.jpeg]]
	 
	     [[./app/assets/images/rudasill_2.jpeg]]
	 
	 - [ ] upgrade heroku dyno
	 - [ ] design for mobile
       
	   - [ ] consider building separate mobile site to learn Angular, making 
	     ajax calls to the current phill api
	 
	     [[~/bin/js/angular/learnAngular/README.org]]
	 
	 - [ ] update staff page
	   - [ ] waiting for updates from Mandie
	 - [ ] hide ccf section until 2016
	   - [ ] backup database
	 
       - [-] Wed Oct  7 10:35:18 CDT 2015
     
	 - [-] hide ccf section until 2016
	   - [X] keep open/accessible by path for portfolio demo
	   - [X] hide links to ccf
	 
	     [[./app/views/layouts/_static_menu.html.erb]]
	 
	   - [X] remove from slides
	 
	     [[./app/views/pages/home.html.erb]]
	 
	   - [ ] backup database
	   - [ ] prevent modification?
	 - [ ] create special event section
	   - [ ] section for LUX art event
	   - [ ] details in email from Mandie
	 - [-] update staff page
	   - [X] substitute staff page with coming soon page
	 
	     [[./app/views/pages/staff.html.erb]]
	 
	   - [ ] wait for updates from Mandie
	 - [ ] design for mobile
	 - [ ] upgrade heroku dyno
       
       
** Configuration

*** Gems

    [[./Gemfile]]

   #+NAME: Gemfile
   #+begin_src ruby :tangle Gemfile :padline no
     source 'http://rubygems.org'
     ruby '2.3.1'

     gem 'rails', '4.2.6'
     gem 'sass-rails', '>= 3.2'
     gem 'compass-rails', '~> 2.0.alpha.0'
     gem 'uglifier', '2.5.1'
     gem 'coffee-rails', '4.0.1'
     gem 'jquery-rails', '3.1.1'
     gem 'jquery-ui-rails'
     gem 'jbuilder'
     gem 'kaminari'
     gem 'responders'
     gem 'bcrypt'
     gem 'devise'
     gem 'pg'
     gem 'comfortable_mexican_sofa', '1.12.7'
     gem 'sdoc', '~> 0.4.0',          group: :doc
     #gem 'paperclip', '~> 4.3'
     gem 'paperclip', :git => 'https://github.com/thoughtbot/paperclip', :ref => '523bd46c768226893f23889079a7aa9c73b57d68'
     #gem 'aws-sdk', '~>2'
     gem 'aws-sdk'
     gem 'mail_form'
     gem 'simple_form'
     gem 'inherited_resources', github: 'josevalim/inherited_resources', branch: 'rails-4-2'
     gem 'skrollr-rails'
     gem 'rails_admin'
     gem 'picturefill'
     gem 'autoprefixer-rails'
     gem 'chronic'
     gem 'acts_as_xlsx'
     gem 'axlsx'
     gem 'axlsx_rails'
     gem 'rubyzip'
     gem 'writeexcel', '1.0.5'
     gem 'figaro'
     gem 'meta-tags'
     gem 'metamagic'
     gem 'safe_yaml', '1.0.4'
     gem 'sitemap_generator'
     gem 'dynamic_sitemaps'
     gem 'fullcalendar-rails'
     gem 'momentjs-rails'
     gem 'jquery-datetimepicker-rails'
     gem 'cocoon'
     gem 'turbolinks'
     gem 'jquery-turbolinks'
     gem 'masonry-rails'
     gem 'omniauth', '~> 1.2.2'
     gem 'omniauth-google-oauth2'
     gem 'json'
     gem 'instagramjs-rails'
     #gem 'will_paginate', '~> 3.0.6'
     gem 'dalli'
     gem 'foundation-rails'
     gem 'foundation-icons-sass-rails'
     gem 'jquery-slick-rails'
     gem 'koala', '~> 2.2'
     gem 'jquery-scrollto-rails'
     gem 'font_assets'
     gem 'font-awesome-rails'
     gem 'cancancan', '~> 1.10'
     #gem 'refile', require: 'refile/rails'
     #gem 'refile-mini_magick'
     #gem 'refile-s3'
     gem 'dotenv-rails', :groups => [:development, :test]
     #gem 'nicescroll-rails'
     gem 'jscrollpane-rails'

     # Spring speeds up development by keeping your application running in the background. Read more: https://github.com/rails/spring
     gem 'spring',        group: :development

     group :development, :test do
       gem 'byebug'
       gem 'sqlite3'
       gem 'foreman'
       gem 'pry-rails'
       gem 'unicorn'
       gem 'rails-dev-tweaks', '~> 1.1'
     end

     group :production do
       gem 'rails_12factor'
       gem 'unicorn-rails'
     end

   #+end_src
   

** Events

   : rails g scaffold Event title:string subtitle:string location:string \ 
   : location_address:text date_and_time:datetime parent:string \
   : description:text links:text event_image_id:string

   : rake db:migrate

   [[./config/routes.rb]]
   [[./app/models/ability.rb]]
   [[./app/controllers]]
   [[./app/controllers/events_controller.rb]]
   
   : def new
   :   @event = Event.new
   :   authorize! :manage, @event
   : end

   : <%= if.can? :manage, @event %>
   :   <%= link_to "Edit", edit_event_path(@event) %>
   : <%= end %>

   - [ ] image file upload(s)

     PaperClip

     https://github.com/thoughtbot/paperclip/issues/2021

     [[./Gemfile]]

     : gem 'paperclip', :git => 'https://github.com/thoughtbot/paperclip', :ref => '523bd46c768226893f23889079a7aa9c73b57d68'

     ::::::::::::::::::::::::::::::::::::
     Refile Below, not quite successful yet

     https://github.com/refile/refile

     - [ ] to S3

       [[./Gemfile]]

       : gem "refile", require: "refile/rails"
       : gem "refile-mini_magick"

       [[./app/models/event.rb]]

       : Class Event < ActiveRecord::Base
       :   attachment :event_image
       : end

       [[./app/views/events]]
       [[./app/views/events/_form.html.erb]]
       [[./app/views/events/_form.html.haml]]

       : <%= form_for @event do |event| %>
       : ...
       :   <%= form.attachment_field :event_image %>
       : ...
       : <% end %>

       [[./app/controllers/events_controller.rb]]

       : def event_params
       :   params.require(:event).permit(... :event_image, ...)
       : end

       [[./app/views/events/show.html.erb]]
       [[./app/views/events/show.html.haml]]

       : <%= image_tag attachment_url(@event, :event_image, :fill, 300, 300, format: "jpg") %>

       - [ ] s3

	 [[./Gemfile]]

	 : gem 'aws-sdk', '~>2'
	 : gem 'refile-s3'

	 [[./config/environments/production.rb]]
	 [[./config/initializers/refile.rb]]

	 : require 'refile/s3'
	 : 
	 : aws = {
	 :   access_key_id: ENV['AWS_ACCESS_KEY_ID'],
	 :   secret_access_key: ENV['AWS_SECRET_ACCESS_KEY'],
	 :   bucket: ENV['AWS_BUCKET']
	 : }
	 : Refile.cache = Refile::S3.new(prefix: 'cache', **aws)
	 : Refile.store = Refile::S3.new(prefix: 'store', **aws)
	 
	 
*** Chris Rudasill benefit ([[Events][event]])

    [[file:docs/ArtAuctionbyChrisRudasilltobenifittPrairieHill.docx.txt][original document]]

    /Art Auction to Benefit PRAIRIE HILL/

    Local artist and PRAIRIE HILL dad Chris Rudasill is donating 
    several pieces of his original artwork to be sold in a silent 
    auction. 100% of the profits will go directly to the further 
    funding of art materials and enrichment opportunities at PRAIRIE  
    HILL. 

    Don’t miss this great opportunity to see and purchase original artwork 
    at accessible prices (some starting bids will be as low as $10) while 
    supporting education through year-round and summer camp programming at 
    PRAIRIE HILL Learning Center.


	 - Silent auction during First Friday 
	   - 11/6/15 (November 6)
	     - 5–8 p.m. 
	 - Lux Center for the Arts 
	   - 2601 N 48th St, Lincoln, NE 68504

	 For more information and images of Chris’s artwork, visit: 
	 [[http://chrisrudasill.weebly.com][chrisrudasill.weebly.com]]   

	 For more info about PRAIRIE HILL, visit:   
	 [[http://prairiehill.com][prairiehill.com]]

	 [[./app/assets/images/rudasill_1.jpeg]]

	 [[./app/assets/images/rudasill_2.jpeg]]

	 
** Styles

   [[./app/assets/stylesheets]]

** OLD :noexport:
*** TODO

   - [-] August 2015

     - [-] take summer camp down
       - [X] remove from menu
       - [ ] restrict access to page
     - [ ] ccf app
       - [ ] function
	 - [ ] volunteer others
	 - [ ] advance my shifts page
	 - [ ] show schedule/calendar to see where friends are volunteering
	 - [ ] spreadsheet export
       - [ ] informational page
	 what is the country fair?
	 simple info page, what's at the fair? (find scott's video from previous years)
	 slide show - madeline pics (look on fb, 5-10 pics)
       - [ ] fun run info, registration link
       - [ ] move ccf menu link to after programs, make it stand out
   
   - [ ] fix change/forgot password issue
   - [-] rebuild ccf volunteer app

     [[./config/routes.rb]]
    
     #+BEGIN_SRC ruby :tangle "config/routes.rb"
       Rails.application.routes.draw do

         namespace :api, defaults: {format: 'json'} do
           resources :activities,
                     :pages,
                     :shifts,
                     :volunteers,
                     :users
         end
        
         resources :activities
         resources :shifts 
         resources :volunteers

         match '/contacts', to: 'contacts#new', via: 'get'
         resources "contacts", only: [:new, :create]
        
         comfy_route :cms_admin, :path => '/admin'

         devise_for :users
         resources :pages

         root "pages#home"

         get "about" => "pages#about"
         get "news" => "pages#news"
         get "events" => "pages#events"
         get "programs" => "pages#programs"
         get "calendar" => "pages#calendar"
         get "contact" => "pages#contact"
         get "staffandboard" => "pages#staff"
         get "jobs" => "pages#jobs"
         get "donate" => "pages#donate"
         get "camp" => "pages#summer_camp"
         get "csv" => "pages#csvupload"
         get "uniq" => "pages#unique"
         get "ccf" => "shifts#volunteer"
         get "user_shifts" => "shifts#user_shifts"

         # Make sure this routeset is defined last
         comfy_route :cms, :path => '/', :sitemap => true
       end
     #+END_SRC

     - [ ] connect with drive api to the spreadsheet?
       - [ ] omniauth
	 
	 https://www.twilio.com/blog/2014/09/gmail-api-oauth-rails.html
         https://github.com/intridea/omniauth
       
     - [ ] make use of fullcalendar for interaction?
       see [[~/RAILS-dev/son/budget/README.org][Budget]] for working example and detailed instructions

       - calendar integration?

	 - [ ] sample integration

	   [[./config/routes.rb]]

	   [[http://blog.crowdint.com/2014/02/18/fancy-calendars-for-your-web-application-with-fullcalendar.html][FullCalendar Rails]]

	   http://fullcalendar.io/docs/event_data/Event_Object/#color-options

	   - [ ] Activities

	     - [ ] Configuration

	       [[./Gemfile]]

	       : gem 'fullcalendar-rails'
	       : gem 'momentjs-rails'
	  
	       : bundle install
	      
	       [[./app/assets/stylesheets/application.css.scss]]

	       : *= require fullcalendar
	  
	       [[./app/assets/javascripts/application.js]]

	       These are order-sensitive
	      
	       : //= require moment
	       : //= require fullcalendar

	       [[./app/views/activities/index.html.erb]]
	      
	       : <div id='calendar'></div>

	       [[./app/views/activities/new.html.erb]]

	       [[./app/views/activities/edit.html.erb]]

	       [[./app/views/activities/_form.html.erb]]

	       [[./app/assets/javascripts/activities.js]]

	       [[./app/views/activities/index.json.jbuilder]]

	       [[file:db/migrate/20150424144648_add_start_end_times_to_activities.rb][file:~/RAILS-dev/son/phill/PrairieHillWebsite/db/migrate/20150424144648_add_start_end_times_to_activities.rb]]

	       : rails g migration AddStartEndTimesToActivities start_time:datetime end_time:datetime
	       : rake db:migrate

	       [[./app/controllers/activities_controller.rb]]

	   - [ ] datepicker

	     https://github.com/Nerian/bootstrap-datepicker-rails
	     https://jqueryui.com/datepicker/#min-max

	     [[./Gemfile]]
	    
	     : gem 'bootstrap-datepicker-rails'

	     : bundle install
	
	     [[./app/assets/stylesheets/application.css.scss]]

	     : *= require bootstrap-datepicker3

	     [[./app/assets/javascripts/application.js]]

	     : //= require bootstrap-datepicker

	   - [ ] datetimepicker

	     Datepicker allows for a slick date selection, but what about times?
             There are a few different gem solutions that make use of timepicker 
             and datepicker js libraries.

	     https://github.com/Envek/jquery-datetimepicker-rails

	     [[./Gemfile][gem 'jquery-datetimepicker-rails']]
	    
	     [[./app/assets/stylesheets/application.css.scss]]

	     : *= require jquery.datetimepicker

	     [[./app/assets/javascripts/application.js]]

	     : //= require jquery.datetimepicker

	     to autoinitialize

	     : //= require jquery.datetimepicker/init

	     [[./app/assets/javascripts/shifts.js]]

	     : $('.datetimepicker').datetimepicker();

	     [[./app/views/shifts/_form.html.erb]]

	     : <%= f.text_field :start_time, class: 'datetimepicker' %>

	     - [ ] for user shift selection (TRANSFER TO [[~/RAILS-dev/phill/PrairieHillWebsite][PHILL NOTES]])

	       - [ ] timepicker

		 #+begin_src js
                   $('#timepicker').datetimepicker({
                       datepicker: false,
                       format: 'H:i'
                   });
		 #+end_src

     - [X] backup volunteer data
       - [X] check api access to user data
	 - [X] update api to authenticate requests
	   [[http://railscasts.com/episodes/352-securing-an-api?view%3Dasciicast][RailsCasts Episode 352 - Securing an API]]
	   - [X] Basic

	     : http_basic_authenticate_with name: "admin", 
	     :                              password: "secret"

	 - [X] ruby?
	   [[https://gist.github.com/kyletcarlson/7911188][Kyle T Carlson]]
	   [[http://www.rubyinside.com/nethttp-cheat-sheet-2940.html][NET HTTP Cheat Sheet]]

	   : require "net/http"
	   : require "uri"
	   :
	   : uri = URI.parse("http://www.prairiehill.com/api/users")

       - [X] user info
       - [X] last years activity/shift data
     - [-] re-organize resource relationships
       - [ ] destroy volunteer resource?
       - [-] Devise User/Volunteer
	 [[./db/migrate]]
	 [[./app/models/user.rb]]

	 #+begin_src ruby :tangle "./app/models/user.rb"
           class User < ActiveRecord::Base
             # Include default devise modules. Others available are:
             # :confirmable, :lockable, :timeoutable and :omniauthable
             devise :database_authenticatable, :registerable,
                    :recoverable, :rememberable, :trackable, :validatable

             validates :username,
                       presence: true,
                       length: {maximum: 255},
                       uniqueness: { case_sensitive: false },
                       format: { with: /\A[a-zA-Z0-9]*\z/,
                                 message: "may only contain letters and numbers." }

             has_many :shifts
             #has_many :activities through: :shifts

             # Virtual attribute for authenticating by either username or email
             # This is in addition to a real persisted field like 'username'
             attr_accessor :login


             def self.find_first_by_auth_conditions(warden_conditions)
               conditions = warden_conditions.dup
               if login = conditions.delete(:login)
                 # when allowing distinct User records with, e.g., "username" and "UserName"...
                 # where(conditions).where(["lower(username) = :value OR lower(email) = :value", { :value => login.downcase }]).first
                 where(conditions).where(["username = :value OR lower(email) = lower(:value)", { :value => login }]).first
               else
                 where(conditions).first
               end
             end

             #### This is the correct method you override with the code above
             #### def self.find_for_database_authentication(warden_conditions)
             #### end
           end
	 #+end_src
	 - attributes
	   - id 
	   - email 
	   - username 
	   - name 
	   - admin 
	   - first_name 
	   - last_name 
	   - phone
	 - [ ] has guest?
	 - [X] has many shifts
	 - [X] has many activities through shifts
       - [-] Activity
	 [[./app/models/activity.rb]]

	 #+begin_src ruby :tangle "./app/models/activity.rb"
           class Activity < ActiveRecord::Base

             has_many :shifts
            
             def self.to_csv(options = {})
               CSV.generate(options) do |csv|
                 csv << column_names
                 all.each do |activity|
                   csv << activity.attributes.values_at(*column_names)
                 end
               end
             end
           end
	 #+end_src

	 - [X] has many shifts
	 - [ ] belongs to users

       - [ ] Shifts

	 [[./app/models/shift.rb]]

	 #+begin_src ruby :tangle "./app/models/shift.rb"
           class Shift < ActiveRecord::Base
             has_and_belongs_to_many :users, :dependent => :destroy
             accepts_nested_attributes_for :users


             def self.to_xlsx(options = {})

               workbook = WriteExcel.new('shifts.xlsx')
           #    workbook = WriteExcel.new(STDOUT)
              
               @shiftTitles = all.pluck(:title).uniq
               @shiftTitles.each do |title|
                
                 worksheet = workbook.add_worksheet

                 # format = workbook.add_format
                 # format.set_bold
                 # format.set_color('red')
                 # format.set_align('right')

                 worksheet.write(0, 0, title) 

                 @shifts_by_title = all.where(title: title)      
                 @shifts_by_title.each do |shift|
                   worksheet.write(1, 1, 'hotdog' )#shift.title)
                 end
               end

               workbook.close

             end


             def self.to_csv(options = {})
               CSV.generate(options) do |csv|
                 csv << ["", "Time", "Volunteer", "Guest Volunteer"]
                 @shiftTitles = all.pluck(:title).uniq
                 @shiftTitles.each do |title|
                   csv << [title]
                   @shifts_by_title = all.where(title: title)
                   @shifts_by_title.each do |shift|
                     csv << ["", shift.time, shift.volunteer, shift.guest]
                   end
                 end
               end
             end

             # def self.to_csv(options = {})
             #   CSV.generate(options) do |csv|
             #     csv << ["", "Time", "Volunteer", "Guest Volunteer"]
             #     @shiftTitles = all.pluck(:title).uniq

             #     @shiftTitles.each do |title|
             #       csv << [title]

             #       @shifts_by_title = all.where(title: title)
             #       @shifts_by_title.each do |shift|

             #         csv << ["", shift.time, shift.volunteer, shift.guest]
             #       end
             #     end

             #   end
             # end

             # def self.to_csv(options = {})
             #   CSV.generate(options) do |csv|
             #     csv << column_names
             #     all.each do |shift|
             #       csv << shift.attributes.values_at(*column_names)
             #     end
             #   end
             # end

             def add_user_idee(id)
              
               user_ids_will_change!
               update_attribute(:user_ids, self.user_ids << id)

               self.save

             end

             def cancel_shift

               shift.volunteer = nil
               shift.save

             end
           end

	 #+end_src

	 - [ ] has guest?  
	 - [ ] belongs to activity
	 - [ ] belongs to users
	   - [ ] has guest?

   - [-] build an API
     https://codelation.com/blog/rails-restful-api-just-add-water
     - [X] add to [[./Gemfile]]

       : gem 'jbuilder'
       : gem 'kaminari'
       : gem 'responders'
      
     - [X] controllers

       - [X] create file [[./app/controllers/api/base_controller.rb]]

       - [X] add the public resource methods to the same controller

       - [X] connect base controller to model controllers

	 Pay attention that these inherit from /Api::BaseController/

	 [[./app/controllers/api/users_controller.rb]]

	 [[./app/controllers/api/activities_controller.rb]]

	 [[./app/controllers/api/pages_controller.rb]]

	 [[./app/controllers/api/shifts_controller.rb]]

	 [[./app/controllers/api/volunteers_controller.rb]]

     - [X] routing

       [[./config/routes.rb]]

       :   namespace :api do
       :     resources :logs, :periods
       :   end

     - [X] serializing data

       : mkdir app/views/api /shifts etc

       - [X] [[./app/views/api/users/index.json.jbuilder]]

       - [X] [[./app/views/api/users/show.json.jbuilder]]

       - [X] [[./app/views/api/activities/index.json.jbuilder]]

       - [X] [[./app/views/api/activities/show.json.jbuilder]]

       - [X] [[./app/views/api/pages/index.json.jbuilder]]

       - [X] [[./app/views/api/pages/show.json.jbuilder]]

       - [X] [[./app/views/api/shifts/index.json.jbuilder]]
	
       - [X] [[./app/views/api/shifts/show.json.jbuilder]]

       - [X] [[./app/views/api/volunteers/index.json.jbuilder]]

       - [X] [[./app/views/api/volunteers/show.json.jbuilder]]

     - [ ] security and performance concerns

       - [ ] use fragment caching to make API efficient

	 - [ ] http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching

	 - [ ] https://github.com/rails/jbuilder
	   offers advantages in caching over libraries like https://github.com/rails-api/active_model_serializers
	   because you can cache JSON templates the same way you would /erb/ templates

       - [ ] secure your API, gems that we use everyday include CanCan(Can) 
	 and Devise to offer per user permissions on resources

       - [ ] include some more complex functionality like side-loading for 
	 convenience in end-user application development
   - [ ] rebuild views in angular?
   - [-] build mobile app for sign-up
     - [-] ruboto
       http://public.dhe.ibm.com/software/dw/demos/jrubyandandroid/index.htm
       - [X] expose public api
       - [ ] connect application via http requests
	 https://developer.android.com/training/volley/index.html
       - [ ] build mobile views

	 [[./app/views/layouts/application.html.erb]]

	 - [ ] TITLE

	   : <%= render 'layouts/title' %>

	 - [ ] NAV

	   : <%= render 'layouts/mobile_static_menu' %>

	   [[./app/views/layouts/_mobile_static_menu.html.erb]]
	   [[./app/assets/stylesheets/pages.scss]]

	 - [ ] CONTENT

	   : <%= yield :small %>

	   [[./app/views/pages/home.html.erb]]

	   : <% content_for :small do %> 

     - [ ] phonegap
   - [X] re-route http://www.prairiehill.com => heroku app

*** excel export

    http://railscasts.com/episodes/362-exporting-csv-and-excel

*** What we need to look at for functionality:
   
*** mailer contact

    http://rubyonrailshelp.wordpress.com/2014/01/08/rails-4-simple-form-and-mail-form-to-make-contact-form/

   set up successfully in development
   
   - [ ] change heroku configs to prairiehill email authentication for production

*** user accounts

 - [ ] We need USERs with authenticatable accounts
   
   These users will have various access to update content and that's really
   all that they need. However,

   - [ ] Admin/General user

     https://github.com/plataformatec/devise/wiki/How-To:-Add-an-Admin-Role

     We will have user accounts for general things like summer camp and 
     country fair sign up

     We will also have admin users who also have access to CMS

     - [ ] install & configure RailsAdmin

	   https://github.com/sferik/rails_admin

       - [ ] bundle the gem
       
	   : gem 'rails_admin'
	   : bundle install

       - [ ] install RailsAdmin

	     : rails g rails_admin:install

       - [ ] configure for Devise

	 https://github.com/sferik/rails_admin/wiki/Devise

   - [ ] Using ComfortableMexicanSofa for Content Management

     - [ ] already set up to use Paperclip for images

     - [ ] WYSIWYG

       [[./app/assets/stylesheets/comfortable_mexican_sofa/admin/application.css]]

	 - [X] editor window is very short

   - [ ] Private content

     - [ ] admin vs common user accounts

   - [ ] User profiles?

   - [ ] Summer Camp Registration model?

   - [ ] Volunteers/CCF
     
     - [ ] connect devise users with shifts?

     - [ ] Sign up views

       - [ ] if user signed in...

       - [ ] time to learn some jQuery!

       - [ ] FIRST: Shows Activity titles and a number of volunteers total needed
	 
       - [ ] SECOND: Clicking on one of the FIRST shows a view of specific times
	 and number of volunteers still needed for each, just after a description
	 of the activity itself

	 - [ ] checkboxes for selected desired shifts?
	   
	 - [ ] ability to remove volunteer from shifts

       - [ ] BLOG/NEWSfeed for news updates?

       - [ ] PAGEs for general website content

*** ModelViewControl

*** Model

    Pages

    [[./app/controllers/pages_controller.rb]]
    [[./app/models/page.rb]]

**** Page

     - [X] Create Static Pages

       http://www.railstutorial.org/book/static_pages

       - [X] Generate a Pages controller

	 [[./app/controllers/static_pages_controller.rb]]
	 [[./config/routes.rb]]

	 : rails g controller StaticPages home


**** Rails Generation

***** Scaffolding

      - [X] Disable scaffold stylesheet creation 

       	[[./config/application.rb]]

       	 : config.generators do |g|
       	 :   g.stylesheets false
       	 : end

      - [ ] Generate a scaffold

       	EXAMPLE
       	: rails g scaffold Page index

      - [ ] migrate the database

       	: rake db:migrate


*** View

**** Skrollr   

     https://github.com/reed/skrollr-rails

     ???"@import 'skrollr';" in [[./app/assets/stylesheets/bootstrap_and_customization.css.scss]]?

     - [X] add skrollr script

       - [X] make sure skrollr-rails is in the Gemfile

         [[./Gemfile]]

	 : gem 'skrollr-rails'

       - [X] add the following script just before </body> tag

	 [[./app/views/layouts/application.html.erb]]

	 : <script>
         :  (function($){
	 :    skrollr.init({
	 :      forceHeight: false,
	 :      smoothScrolling: false
	 :    }).refresh();
         :  } (jQuery));
	 : </script>

       - [X] Place #skrollr-body div tag around <%= yield %> tag

	 : <div id="skrollr-body">


     - [X] require skrollr in application.js

       [[./app/assets/javascripts/application.js]]

       : //= require skrollr

       - [X] For IE compatibility

	 : //= require skrollr
	 : //= require skrollr.ie

       - [X] This plugin makes hashlinks scroll nicely to their target position.

	 : //= require skrollr
	 : //= require skrollr.menu
       

**** Bootstrap-sass
     
     - [X] Create custom bootstrap stylesheet

       [[./app/assets/stylesheets/bootstrap_and_customization.css.scss]]
       
       - [X] create file

             : echo "@import 'bootsrap';" > app/assets/stylesheets/bootstrap_and_customization.css.scss

       *NOTE* Place new variables before "@import 'bootstrap'"

       - [X] Fonts

  	     /EXAMPLE:/
	     : @import url(http://fonts.googleapis.com/css?family=Roboto:400,100,100italic,700italic,700|Clicker+Script);

       - [X] Variables

	     : $phill-grn: #3f8000;

     - [X] Require Bootstrap's Javascript, after jquery_ujs 

       [[./app/assets/javascripts/application.js]]

       : //= require jquery
       : //= require jquery_ujs
       : //= require bootstrap
       : //= require turbolinks
       : //= require_tree .

***** Foundation & Rails

      I'm going to try something "crazy" here and throw Zurb Foundation on top
      of what he have here with Bootstrap, as I've really been enjoying 
      Foundation as frotend framework. Thank you, git, for allowing me to branch
      off!

      First, I'm going to try just plopping it on top. This may not be a good 
      idea, but I'm in the mood for danger...

      https://github.com/zurb/foundation-rails

      [[./Gemfile]]

      : gem 'foundation-rails'
      : bundle

      : rails g foundation:install

      [[./app/views/layouts/application.html.erb]]

      : <head>
      :   <%= javascript_include_tag 'vendor/modernizr' %>
      :   <meta name="viewport" content="width=device-width, initial-scale=1.0" />
      : </head>

      [[./config/routes.rb]]

      [[./app/views/]]
      [[./app/views/pages/ccf.html.erb]]
      [[./app/views/pages/_ccf_menu.html.erb]]
      [[./app/assets/javascripts]]

      [[./app/assets/stylesheets/foundation_and_overrides.scss]]

**** Assets

***** Stylesheets

      [[./app/assets/stylesheets/bootstrap_and_customization.css.scss]]

***** Javascripts

      - [X] Replace turbolinks with jquery-turbolinks

       	[[./app/assets/javascripts/application.js]]

       	- [X] Check for jquery-turbolinks in Gemfile

	  [[./Gemfile]]

	  : gem 'jquery-turbolinks'
	  : bundle

       	- [X] remove turbolinks line

	  : //= require turbolinks

       	- [X] add jquery.turbolinks under bootstrap

	  : //= require bootstrap
	  : //= require jquery.turbolinks

	  - [X] Restart the server

***** Images   

      - [X] css background images 

       	[[./app/assets/stylesheets/bootstrap_and_customization.css.scss]]

       	: background: image-url('image.jpg')
       	
      - [ ] run the following command to precompile assets

	   : RAILS_ENV=production bundle exec rake assets:precompile

      - [ ] set video as background?

       	

**** Views

***** Application

     [[./app/views/]]

     - [X] add viewport

       [[./app/views/layouts/application.html.erb]]

       : <meta name="viewport" content="width=device-width, intial-scale=1.0">

     - [ ] Optional page refresh interval

         : <meta http-equiv="REFRESH" content="60" />


***** Pages

      [[./app/views/pages/]]
      [[./app/views/pages/pages.org]]


*** Control

**** AngularJS (Honeybadger tutorial)
       
       This example from honeybadger may be my key to fixing the issue I am having with
       the the Prairie Hill volunteer sign-up. Let's try it out, first in this sample
       app. Once I understand what is going on and how to impliment Angular, maybe it 
       will be a better solution than all of that erb crap I was trying to use...

       https://www.honeybadger.io/blog/2013/12/11/beginners-guide-to-angular-js-rails

****** Initial setup

       - [X] create the project

       	 : rails new rest --database=postgresql --skip-test-unit

       - [ ] create the PostgreSQL database user:

       	 : createuser -P -s -e rest

       - [ ] Add RSpec to your Gemfile & Install RSpec

       	 [[./Gemfile]]

       	 : gem "rspec-rails", "~> 2.14.0"

       	 : bundle install

       	 : rails g rspec:install

       - [ ] Create the database:

       	 : rake db:create


****** Creating the Restaurant model

       - [ ] Create the Restaurant resource

       	 : rails g scaffold restaurant name:string

       - [ ] Make sure restaurant names are unique

       	 [[./db/migrate/]]

       	 : class CreateRestaurants < ActiveRecord::Migration
       	 :   def change
       	 :     create_table :restaurants do |t|
       	 :       t.string :name
       	 :
       	 :       t.timestamps
       	 :     end
       	 :
       	 :     add_index :restaurants, :name, unique: true
       	 :   end
       	 : end

       	 - [ ] Run the migration

       	   : rake db:migrate

       	 - [ ] Add some specs...
       	   
       	   Need to start learning TDD, but I'm lazy right now


****** Bringing AngularJS into the mix

       - [X] Create the controller

       	 : rails g controller static_pages index

       - [X] Update routes
	 
       	 [[./config/routes.rb]]

       	 : root 'static_pages#index'

       - [X] Download Angular

       	 : wget http://code.angularjs.org/1.1.5/angular.js \
       	 : http://code.angularjs.org/1.1.5/angular-mocks.js

       	 : mv angular* app/assets/javascripts

       - [-] Add it to the asset pipeline

       	 [[./app/assets/javascripts/application.js]]

       	 - [ ] Remove turbolinks line

	   Keeping it in for now as a test

       	 - [ ] Add the following two lines

       	   : //= require angular
       	   : //= require main

       	 - [X] Set up the layout

       	   [[./app/views/layouts/application.html.erb]]
	   
	   naming the app via angular "phill" for simplicity
	   keeping turbolinks code in for now until I see a real reason to 
           take it out

	   - [X] tested taking out turbolinks markup

       	   : <!DOCTYPE html>
       	   : <html ng-app="phill">
       	   : <head>
       	   :   <title>Rest</title>
       	   :   <%= stylesheet_link_tag    'application', media: 'all' %>
       	   :   <%= javascript_include_tag 'application' %>
       	   :   <%= csrf_meta_tags %>
       	   : </head>
       	   : <body>
       	   :
       	   : <div ng-view>
       	   :   <%= yield %>
       	   : </div>
       	   :
       	   : </body>
       	   : </html>

       	 - [X] Creating an Angular controller

       	   : mkdir -p app/assets/javascripts/angular/controllers

       	   - [X] Create the controller

	     [[./app/assets/javascripts/angular/controllers/HomeCtrl.js.coffee]]

	     : @phill.controller 'HomeCtrl', ['$scope', ($scope) ->
	     : 
	     : ]

       	   - [X] Add an Angular route

	     [[./app/assets/javascripts/main.js.coffee]]

	     : # This line is related to our Angular app, not to our
             : # HomeCtrl specifically. This is basically how we tell
             : # Angular about the existence of our application.
             : @phill = angular.module('phill', [])

	     : # This routing directive tells Angular about the default
             : # route for our application. The term "otherwise" here
             : # might seem somewhat awkward, but it will make more
             : # sense as we add more routes to our application.
             : @phill.config(['$routeProvider', ($routeProvider) ->
             :   $routeProvider.
             :     otherwise({
             :       templateUrl: '../templates/home.html',
             :       controller: 'HomeCtrl'
             :     }) 
             : ])

       	   - [X] Add an Angular template

	     : mkdir public/templates

	     [[./public/templates/home.html]]

	     : This is the home page

	     - [X] An example of data binding

	       [[./app/assets/javascripts/angular/controllers/HomeCtrl.js.coffee]]

	       : @phill.controller 'HomeCtrl', ['$scope', ($scope) ->
               :   $scope.foo = 'bar'        
               : ]

	       [[./public/templates/home.html]]

	       : Value of "foo": {{foo}}


****** Doing it for real this time

       - [ ] Seed the database

       	 [[./db/seeds.rb]]

       	 : Restaurant.create([
       	 :   { name: "The French Laundry" },
       	 :   { name: "Chez Panisse" },
       	 :   { name: "Bouchon" },
       	 :   { name: "Noma" },
       	 :   { name: "Taco Bell" },
       	 : ])

       	 : rake db:seed

       - [X] Creating a shift index page

       	 : mkdir public/templates/shifts

       	 [[./public/templates/shifts/index.html]]

       	 : <a href="/#">index</a>
       	 : <ul ng-repeat="restaurant in restaurants">
       	 :   <li>
       	 :     <a ng-click="viewRestaurant(restaurant.id)">
       	 :       {{ restaurant.name }}
       	 :     </a>
       	 :   </li>
       	 : </ul>

	 OR rather

	 : <a href="/#">Shifts</a>
         : <ul ng-repeat="shift in shifts">
         :   <li>
         :     <a ng-click="viewShift(shift.id)">
         :       {{ shift.title }}
         :     </a>
         :   </li>
         : </ul>

       - [X] Create the controller

       	 [[./app/assets/javascripts/angular/controllers/ShiftIndexCtrl.js.coffee]]

       	 : @rest.controller 'RestaurantIndexCtrl', ['$scope', '$location', '$http', ($scope, $location, $http) ->
       	 :   $scope.restaurants = []
       	 :   $http.get('./restaurants.json').success((data) ->
       	 :     $scope.restaurants = data
       	 :   )
       	 : ]

	 OR rather

	 : @phill.controller 'ShiftIndexCtrl', ['$scope', '$location', '$http', ($scope, $location, $http) ->
         :   $scope.shifts = []
         :   $http.get('./shifts.json').success((data) ->
         :     $scope.shifts = data
         :   )
         : ]

       - [X] Adjust routing configuration

       	 [[./app/assets/javascripts/main.js.coffee]]

       	 : @phill = angular.module('phill', [])
       	 :
       	 : @phill.config(['$routeProvider', ($routeProvider) ->
       	 :   $routeProvider.
       	 :     when('/shifts', {
       	 :       templateUrl: '../templates/shifts/index.html',
       	 :       controller: 'ShiftIndexCtrl'
       	 :     }).
       	 :     otherwise({
       	 :       templateUrl: '../templates/home.html',
       	 :       controller: 'HomeCtrl'
       	 :     })
       	 : ])


****** Adding our first test

       fill in later


****** Building out the shifts page

       When you generate scaffolding in Rails 4, it gives you some .jbuilder files:

       [[./app/views/shifts/index.json.jbuilder]]

       - [X] Add :id parameter for json.extract!

       	 : json.array!(@restaurants) do |restaurant|
       	 :   json.extract! restaurant, :id, :name
       	 :   json.url restaurant_url(restaurant, format: :json)
       	 : end

	 OR rather

	 : json.array!(@shifts) do |shift|
         :   json.extract! shift, :id, :title, :vols_needed, :user_ids
         :   json.url shift_url(shift, format: :json)
         : end

       - [ ] define pushShift()

       	 [[./app/assets/javascripts/angular/controllers/ShiftIndexCtrl.js.coffee]]

       - [X] define viewShift()

       	 [[./app/assets/javascripts/angular/controllers/ShiftIndexCtrl.js.coffee]]

       	 : @rest.controller 'RestaurantIndexCtrl', ['$scope', '$location', '$http', ($scope, $location, $http) ->
       	 :   $scope.restaurants = []
       	 :   $http.get('./restaurants.json').success((data) ->
       	 :     $scope.restaurants = data
       	 :   )
       	 :
       	 :   $scope.viewRestaurant = (id) ->
       	 :     $location.url "/restaurants/#{id}"
       	 : ]

	 OR rather

	 : @phill.controller 'ShiftIndexCtrl', ['$scope', '$location', '$http', ($scope, $location, $http) ->
         :   $scope.shifts = []
         :   $http.get('./shifts.json').success((data) ->
         :     $scope.shifts = data
         :   )
	 : 
         :   $scope.viewShift = (id) ->
         :     $location.url "/shifts/#{id}"        
         : ]

       - [X] Create show template, route and controller

       	 [[./public/templates/shifts/show.html]]

       	 : <h1>{{shift.title}}</h1>

       	 [[./app/assets/javascripts/main.js.coffee]]

       	 : @rest = angular.module('rest', [])
       	 :
       	 : @rest.config(['$routeProvider', ($routeProvider) ->
       	 :   $routeProvider.
       	 :     when('/restaurants', {
       	 :       templateUrl: '../templates/restaurants/index.html',
       	 :       controller: 'RestaurantIndexCtrl'
       	 :     }).
       	 :     when('/restaurants/:id', {
       	 :       templateUrl: '../templates/restaurants/show.html',
       	 :       controller: 'RestaurantShowCtrl'
       	 :     }).
       	 :     otherwise({
       	 :       templateUrl: '../templates/home.html',
       	 :       controller: 'HomeCtrl'
       	 :     })
       	 : ])

       	 [[./app/assets/javascripts/angular/controllers/ShiftShowCtrl.js.coffee]]

       	 : @rest.controller 'RestaurantShowCtrl', ['$scope', '$http', '$routeParams', ($scope, $http, $routeParams) ->
       	 :   $http.get("./restaurants/#{$routeParams.id}.json").success((data) ->
       	 :     $scope.restaurant = data
       	 :   )
       	 : ]





***** Routes

      [[./app/views/][Views Directory]]

      [[./config/routes.rb]]

      - [X] create root path

       	: root 'static_pages#home'

      - [ ] create paths for desired routes

       	: get "about" => "pages#about"
       	: get "news" => "pages#news"
       	: get "programs" => "pages#programs"
       	: get "calendar" => "pages#calendar"
       	: get "contact" => "contacts#new"
       	: get "staffandboard" => "pages#staff"
       	: get "jobs" => "pages#jobs"
       	: get "donate" => "pages#donate"
       	: get "camp" => "pages#summer_camp"
       	: get "csv" => "pages#csvupload"
       	: get "ccf" => "shifts#volunteer"



***** Controllers   

      [[./app/controllers/application_controller.rb]]

      #+begin_src ruby :tangle "./app/controllers/application_controller.rb"
       	class ApplicationController < ActionController::Base
          # Prevent CSRF attacks by raising an exception.
          # For APIs, you may want to use :null_session instead.
          # protect_from_forgery with: :exception
          protect_from_forgery
          skip_before_action :verify_authenticity_token, if: :json_request?

          before_filter :configure_permitted_parameters, if: :devise_controller?
          before_filter :set_contacts

          def set_contacts
            @contact = Contact.new
          end

          def after_sign_in_path_for(resource)
            ccf_path
          end

          def after_sign_out_path_for(resource)
            ccf_path
          end

          protected
          def configure_permitted_parameters
            devise_parameter_sanitizer.for(:sign_up) { |u| u.permit(:name, :first_name, :last_name, :phone, :username, :email, :password, :password_confirmation, :remember_me) }
            devise_parameter_sanitizer.for(:sign_in) { |u| u.permit(:login, :username, :email, :password, :remember_me) }
            devise_parameter_sanitizer.for(:account_update) { |u| u.permit(:name, :username, :email, :password, :password_confirmation, :current_password, :phone, :first_name, :last_name, :admin) }
          end

          def json_request?
            request.format.json?
          end
       	end
      #+end_src

      [[./app/controllers/pages_controller.rb]]


